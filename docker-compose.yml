---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0-1-ubi8
    restart: always
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:6.0.0-1-ubi8
    restart: always
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_METRIC_REPORTERS: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: "kafka:9092"
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1


  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0-1-ubi8
    restart: always
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
      KAFKA_REST_CUB_KAFKA_TIMEOUT: 180 # https://github.com/confluentinc/cp-docker-images/issues/807

  create-topics:
    image: confluentinc/cp-enterprise-kafka:6.0.0-1-ubi8
    container_name: create-topics
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka:9092 1 300 && \
      echo Creating topics... && \
      kafka-topics --bootstrap-server kafka:9092 --create --topic bank-transfer --partitions 3 --replication-factor 1 && \
      kafka-topics --bootstrap-server kafka:9092 --create --topic user-balance --partitions 3 --replication-factor 1 --config cleanup.policy=compact && \
      kafka-topics --bootstrap-server kafka:9092 --create --topic user --partitions 3 --replication-factor 1 --config cleanup.policy=compact'"

  akhq:
    image: tchiotludo/akhq:latest
    hostname: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:9092"
              schema-registry:
                url: "http://schema-registry:8081"
                type: "confluent"
    ports:
      - 8080:8080
